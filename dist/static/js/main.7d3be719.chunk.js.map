{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","layout_SignedInLinks","layout_SignedOutLinks","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","id","projects_ProjectSummary","key","Notifications","notifications","item","user","content","time","fromNow","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","bind","htmlFor","onChange","React","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","objectSpread","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7d3be719.chunk.js","sourcesContent":["import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\nimport {signOut} from '../../store/actions/authActions'\nimport {connect} from 'react-redux'\n\n\nconst SignedInLinks = (props) => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li><a onClick={props.signOut}>Log Out</a></li>\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\n        </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return  (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' })\n        }).catch((err) => {\n            dispatch({type: 'LOGIN_ERROR', err})\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase()\n\n        firebase.auth().signOut().then(() => {\n            dispatch({type: 'SIGNOUT_SUCCESS'})\n        })\n    }\n}\n\nexport const signUp = (newUser) => {\n    console.log(newUser)\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n      const firebase = getFirebase();\n      const firestore = getFirestore();\n  \n      firebase.auth().createUserWithEmailAndPassword(\n        newUser.email, \n        newUser.password\n      ).then(resp => {\n        return firestore.collection('users').doc(resp.user.uid).set({\n          firstName: newUser.firstName,\n          lastName: newUser.lastName,\n          initials: newUser.firstName[0] + newUser.lastName[0]\n        });\n      }).then(() => {\n        dispatch({ type: 'SIGNUP_SUCCESS' });\n      }).catch((err) => {\n        dispatch({ type: 'SIGNUP_ERROR', err});\n      });\n    }\n  }","import React from 'react'\nimport {NavLink} from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n    return (\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">Sign Up</NavLink></li>\n            <li><NavLink to=\"/signin\">Log In</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {connect} from 'react-redux'\n\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\n\nconst Navbar = (props) => {\n    const {auth, profile} = props\n\n    const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\n    return (\n        <nav className=\"nav-wrapper grey darken-3\">   \n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo\">\n                    Mario Plan\n                </Link>\n                {links}\n            </div>\n        </nav>\n    )\n\n}\nconst mapStateToProps = (state) => {\n    console.log(state)\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n                <div className=\"card-content grey-text text-darken-3\">\n                    <span className=\"card-title\">{project.title}</span>\n                    <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n                    <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n                </div>\n            </div>\n    )\n}\n\nexport default ProjectSummary","import React from 'react'\n\nimport ProjectSummary from './ProjectSummary'\nimport {Link} from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n                return (\n                    <Link to={'/project/' + project.id}>\n                        <ProjectSummary project={project} key={project.id} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const {notifications} = props\n\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user} </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default Notifications","import React, { Component } from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport Notifications from './Notifications'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport {Redirect} from 'react-router-dom'\n\nclass Dashboard extends Component {\n  render() {\n    \n    // console.log(this.props);\n    const { projects, auth, notifications } = this.props;\n\n    if (!auth.uid) {\n      return <Redirect to=\"/signin\" />\n    }\n    \n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {firestoreConnect} from 'react-redux-firebase'\nimport {compose} from 'redux'\nimport {Redirect} from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n    const {project, auth} = props\n\n    if (!auth.uid) return <Redirect to=\"/signin\" />\n\n    if (project) {\n        return (\n            <div className=\"container section project-details\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">{project.title}</span>\n                    <p>{project.content}</p>\n                </div>\n                <div className=\"card-action grey lighten-4 grey-text\">\n                    <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\n                    <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                </div>\n            </div>\n        </div>\n        )\n    } else {\n        return (\n           <div className=\"container center\">\n            <p>Loading project...</p>\n           </div> \n        )\n\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n    // console.log(state);\n    const id = ownProps.match.params.id\n    const projects = state.firestore.data.projects\n    const project = projects ? projects[id] : null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        {collection: 'projects'}\n    ])\n    )(ProjectDetails)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {signIn} from '../../store/actions/authActions'\nimport {Redirect} from 'react-router-dom'\n\nclass SignIn extends React.Component {\n    state = {\n        email: '',\n        password: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state)\n    }\n\n    render() {\n        const {authError, auth} = this.props\n\n        if (auth.uid) return <Redirect to=\"/\" />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit.bind(this)} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange.bind(this)} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange.bind(this)} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth0-0\">Login</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{authError}</p> : null}\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\n\nimport {signUp} from '../../store/actions/authActions'\n\nclass SignUp extends React.Component {\n    state = {\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state)\n    }\n\n    render() {\n        const {auth, authError} = this.props\n        if (auth.uid) return <Redirect to=\"/\" />\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit.bind(this)} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange.bind(this)} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange.bind(this)} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange.bind(this)} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange.bind(this)} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth0-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch)=> {\n    return {\n      signUp: (creds) => dispatch(signUp(creds))\n    }\n  }\n\nexport default connect(mapStateToProps, mapDispatchToProps) (SignUp)","import React from 'react'\nimport {connect} from 'react-redux'\nimport {Redirect} from 'react-router-dom'\n\nimport { createProject } from '../../store/actions/projectActions'\n\nclass CreateProject extends React.Component {\n    state = {\n        title: '',\n        content: '',\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(this.state)\n        this.props.createProject(this.state)\n        this.props.history.push('/')\n    }\n\n    render() {\n        const {auth} = this.props\n\n        if (!auth.uid) return <Redirect to=\"/signin\" />\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit.bind(this)} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create a new project</h5>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange.bind(this)} />\n                    </div>\n\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange.bind(this)}></textarea>\n                    </div>\n\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth0-0\">Create Project</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)","export const createProject = (project) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile\n        const authorId = getState().firebase.auth.uid \n\n\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROJECT', project})\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJCECT_ERRROR', err})\n        })\n\n    }\n}","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route} from 'react-router-dom'\n\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login failed')\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n\n        case 'LOGIN_SUCCESS':\n            console.log('login success')    \n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success')\n            return {\n                state\n            }\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success')\n            return {\n              ...state,\n              authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error')\n            return {...state, authError: action.err.message}\n\n        default: \n            return state\n    }\n}\n\nexport default authReducer","const initState = {\n    projects: [\n        {id: '1', title: 'help me find the peach', content: 'blah blah blah blah'},\n        {id: '2', title: 'collect all the stars', content: 'blah blah blah blah'},\n        {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah blah'}\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created projects')\n            return state\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error')\n            return state\n        default: \n            return state\n    }\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore';\nimport {firebaseReducer} from 'react-redux-firebase';\n \nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer\n});\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n\nvar config = {\n    apiKey: \"AIzaSyBZB0cKIRyvTyRqFIHCvkC4D70bZdaLzMY\",\n    authDomain: \"net-ninja-mario-dc1f3.firebaseapp.com\",\n    databaseURL: \"https://net-ninja-mario-dc1f3.firebaseio.com\",\n    projectId: \"net-ninja-mario-dc1f3\",\n    storageBucket: \"net-ninja-mario-dc1f3.appspot.com\",\n    messagingSenderId: \"1084449662486\"\n  };\n  firebase.initializeApp(config);\n  firebase.firestore().settings({ timestampsInSnapshots: true})\n\n  export default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\n\nimport rootReducer from './store/reducers/rootReducer';\nimport {Provider} from 'react-redux';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}),\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\n  store.firebaseAuthIsReady.then(() => {\n    \n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    serviceWorker.unregister();\n\n  })\n"],"sourceRoot":""}